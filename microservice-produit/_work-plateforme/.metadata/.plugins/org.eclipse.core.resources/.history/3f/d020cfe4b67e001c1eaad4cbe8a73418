package com.urbanisationsi.microservices_contrat.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.urbanisationsi.microservices_contrat.dao.ContratRepository;
import com.urbanisationsi.microservices_contrat.exceptions.ContratIntrouvableException;
import com.urbanisationsi.microservices_contrat.model.Contrat;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@Api(description = "API pour les opérations de CRUD pour les contrats")
@RestController
@RequestMapping(path = "/contrat")
public class ContratController {

	@Autowired
	private ContratRepository contratRepository;

	@ApiOperation(value = "Recherche un contrat grâce à son numéro produit à condition que celui-ci existe.")
	@GetMapping(path = "/Produit/numeroProduit/{numeroProduit}")
	public List<Contrat> rechercherContratParNumeroProduit(@PathVariable Long numeroProduit) {

		List<Contrat> produits = contratRepository.findByNumeroProduit(numeroProduit);

		if (produits.isEmpty())
			throw new ContratIntrouvableException("Le produit avec le numero " + numeroProduit + " n'existe pas !");

		return produits;
	}
	
	@ApiOperation(value = "Recherche un contrat grâce à son numéro de contrat à condition que celui-ci existe.")
	@GetMapping(path = "/Produit/numeroContrat/{numeroContrat}")
	public List<Contrat> rechercherContratParNumeroContrat(@PathVariable Long numeroContrat) {

		List<Contrat> produits = contratRepository.findByNumeroContrat(numeroContrat);

		if (produits.isEmpty())
			throw new ContratIntrouvableException("Le produit avec le numero " + numeroContrat + " n'existe pas !");

		return produits;
	}
	
	@ApiOperation(value = "Recherche un contrat grâce à son numéro d'assure à condition que celui-ci existe.")
	@GetMapping(path = "/Produit/numeroAssure/{numeroAssure}")
	public List<Contrat> rechercherContratParNumeroAssure(@PathVariable Long numeroassure) {

		List<Contrat> produits = contratRepository.findByNumeroAssure(numeroassure);

		if (produits.isEmpty())
			throw new ContratIntrouvableException("Le produit avec le numero " + numeroassure + " n'existe pas !");

		return produits;
	}

}
